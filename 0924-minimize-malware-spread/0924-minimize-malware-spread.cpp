class Solution {
public:
    vector<int>vis;
    vector<vector<int>>adj;
    vector<int>inf;
    int inf_c,compo;
    int minMalwareSpread(vector<vector<int>>& graph, vector<int>& initial) {
        
        int n=graph.size(),m=initial.size();
        adj.resize(n);
        inf.resize(n,0);
        vis.resize(n,0);
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                int u;
                u=graph[i][j];
                if(u==1){
                    if(i!=j)adj[i].push_back(j);
                }   
            }
        }
        
        for(int i=0;i<m;i++)inf[initial[i]]=1;
        int ans=-1;
        int sz=-1;
        sort(initial.begin(),initial.end());
        for(int i=0;i<m;i++){
            if(!vis[initial[i]]){
                inf_c=compo=0;
                dfs(initial[i]);
                if(inf_c==1 && compo>sz){
                       ans=initial[i];
                        sz=compo;
                }
            }
        }
        
        return ans==-1 ? initial[0] : ans;
    }
    
    void dfs(int nod){
        vis[nod]=1;
        compo++;
        if(inf[nod])inf_c++;
        for(auto u : adj[nod]){
            if(!vis[u])dfs(u);
        }
    }
};